module core

interface String {
	func length() -> int,
	func operator[](int index) -> int,
}

// interface Stringable {
// 	func string() -> String&,
// }

// === string impl for int[]& === 

func (int[]&* c) length() -> int {
	var ref = (*c) as struct{any* val, any* len} 
	return ref.len as int
}

func (int[]&* c) operator[](int index) -> int {
	var ref = (*c) as struct{int[]* val, any* len} 
	return ref.val[index]
}